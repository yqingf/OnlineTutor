<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aylfq5.online.tutor.dao.StudentVolunteerMapper">
    <resultMap id="BaseResultMap" type="com.aylfq5.online.tutor.domain.StudentVolunteer">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="tutor_id" property="tutorId" jdbcType="BIGINT"/>
        <result column="volunteer_level" property="volunteerLevel" jdbcType="BIT"/>
        <result column="volunteer_status" property="volunteerStatus" jdbcType="BIT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, student_id, tutor_id, volunteer_level, volunteer_status, create_time, update_time, version
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from student_volunteer
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="getCountByTutorId" resultType="java.lang.Integer">
        select count(0)
        from student_volunteer
        where tutor_id = #{tutorId}
    </select>
    <select id="getAgreeCountByTutorId" resultType="java.lang.Integer">
        select count(0)
        from student_volunteer
        where tutor_id = #{tutorId}
          and volunteer_status = 3
    </select>
    <select id="selectByTutorIdAndStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_volunteer
        where tutor_id = #{tutorId}
        and student_id = #{studentId}
        <if test="status != null">
            and volunteer_status = #{status}
        </if>
    </select>
    <select id="selectByStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_volunteer
        where student_id = #{studentId}
    </select>
    <select id="selectAgreedByStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student_volunteer
        where student_id = #{studentId}
        and volunteer_status = 3
    </select>
    <select id="getByStudentId" resultType="com.aylfq5.online.tutor.entity.VolunteerDTO">
        select sv.id,
               u.name,
               u.cellphone,
               u.email,
               sv.`volunteer_level`  volunteerSequences,
               sv.`volunteer_status` `status`
        from student_volunteer sv
                 join user u on u.id = sv.tutor_id
        where sv.student_id = #{studentId}
    </select>
    <select id="getByTutorId" resultType="com.aylfq5.online.tutor.entity.VolunteerDTO">
        select u.id,
               u.name,
               u.direction,
               u.office,
               sv.`volunteer_level`  volunteersequences,
               sv.`volunteer_status` `status`,
               sv.version
        from student_volunteer sv
                 join user u on u.id = sv.student_id
        where sv.tutor_id = #{tutorid}
    </select>
    <select id="getAgreeByTutorId" resultMap="com.aylfq5.online.tutor.dao.UserMapper.BaseResultMap">
        select u.id, u.name, u.gender, u.number, u.direction, u.office, u.cellphone
        from user u
                 join student_volunteer sv on u.id = sv.student_id
        where sv.tutor_id = #{tutorId}
          and sv.volunteer_status = 3
    </select>
    <select id="getDoubleSelectionResult" resultType="com.aylfq5.online.tutor.entity.DoubleSelectedResult">
        select u.id stuId, u.name stuname,u.office, u.cellphone stuphone, u1.id tutorId, u1.name tutorname, u1.cellphone tutorphone
        from student_volunteer s
                 join user u on u.id = s.student_id
                 join user u1 on u1.id = s.tutor_id
        where s.volunteer_status = 3
        <if test="condition.name != null and condition.name != '' ">
            and u1.name like concat(concat("%",#{condition.name}),"%")
        </if>
        <if test="condition.number != null and condition.number != ''">
            and u1.cellphone like concat(concat("%",#{condition.number}),"%")
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from student_volunteer
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.aylfq5.online.tutor.domain.StudentVolunteer">
        insert into student_volunteer (id,
                                       student_id,
                                       tutor_id,
                                       volunteer_level,
                                       volunteer_status,
                                       create_time,
                                       update_time)
        values (#{id,jdbcType=BIGINT},
                #{studentId,jdbcType=BIGINT},
                #{tutorId,jdbcType=BIGINT},
                #{volunteerLevel,jdbcType=BIT},
                #{volunteerStatus,jdbcType=BIT},
                #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.aylfq5.online.tutor.domain.StudentVolunteer">
        insert into student_volunteer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="tutorId != null">
                tutor_id,
            </if>
            <if test="volunteerLevel != null">
                volunteer_level,
            </if>
            <if test="volunteerStatus != null">
                volunteer_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="tutorId != null">
                #{tutorId,jdbcType=BIGINT},
            </if>
            <if test="volunteerLevel != null">
                #{volunteerLevel,jdbcType=BIT},
            </if>
            <if test="volunteerStatus != null">
                #{volunteerStatus,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.aylfq5.online.tutor.domain.StudentVolunteer">
        update student_volunteer
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="tutorId != null">
                tutor_id = #{tutorId,jdbcType=BIGINT},
            </if>
            <if test="volunteerLevel != null">
                volunteer_level = #{volunteerLevel,jdbcType=BIT},
            </if>
            <if test="volunteerStatus != null">
                volunteer_status = #{volunteerStatus,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.aylfq5.online.tutor.domain.StudentVolunteer">
        update student_volunteer
        set student_id       = #{studentId,jdbcType=BIGINT},
            tutor_id         = #{tutorId,jdbcType=BIGINT},
            volunteer_level  = #{volunteerLevel,jdbcType=BIT},
            volunteer_status = #{volunteerStatus,jdbcType=BIT},
            create_time      = #{createTime,jdbcType=TIMESTAMP},
            update_time      = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyVersionSelective" parameterType="com.aylfq5.online.tutor.domain.StudentVolunteer">
        update student_volunteer
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="tutorId != null">
                tutor_id = #{tutorId,jdbcType=BIGINT},
            </if>
            <if test="volunteerLevel != null">
                volunteer_level = #{volunteerLevel,jdbcType=BIT},
            </if>
            <if test="volunteerStatus != null">
                volunteer_status = #{volunteerStatus,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
        and version = #{version, jdbcType=INTEGER}
    </update>
</mapper>